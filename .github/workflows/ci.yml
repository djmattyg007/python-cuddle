name: "CI"

on: ["push", "pull_request"]

jobs:
  main:
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "Python 3.9"
            python: "3.9"
            experimental: false
            coverage: true
          - name: "Python 3.10"
            python: "3.10.0-rc.2"
            experimental: true
            coverage: false

    name: ${{ matrix.name }}
    runs-on: "ubuntu-20.04"
    continue-on-error: ${{ matrix.experimental }}

    steps:
      - uses: "actions/checkout@v2"

      - name: "Set up Python ${{ matrix.python }}"
        uses: "actions/setup-python@v2"
        with:
          python-version: ${{ matrix.python }}

      - name: "Install preparation"
        run: "python3 -m pip install --upgrade pip wheel"

      - name: "Load cached Poetry installation"
        uses: "actions/cache@v2"
        with:
          path: "~/.local/share/pypoetry"
          key: "poetry-0" # Increment to reset cache

      - name: "Install Poetry"
        uses: "snok/install-poetry@v1"
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: "Load cached virtualenv"
        id: "cached-poetry-dependencies"
        uses: "actions/cache@v2"
        with:
          path: ".venv"
          key: "venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}"

      - name: "Install dependencies"
        if: "steps.cached-poetry-dependencies.outputs.cache-hit != 'true'"
        run: "poetry install --no-interaction --no-root"

      - name: "Run linting"
        run: "poetry run invoke lint"

      - name: "Run type checking"
        run: "poetry run invoke type-check"

      - name: "Run tests"
        run: "poetry run invoke test"

      - name: "Test building packages"
        run: "poetry build"

      - name: "Upload coverage data to Codecov"
        if: ${{ matrix.coverage }}
        uses: "codecov/codecov-action@v2"
